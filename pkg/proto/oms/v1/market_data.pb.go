// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v3.6.1
// source: oms/v1/market_data.proto

package omsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// OrderBook represents the order book for a symbol
type OrderBook struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exchange      string                 `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol        string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Bids          []*PriceLevel          `protobuf:"bytes,3,rep,name=bids,proto3" json:"bids,omitempty"`
	Asks          []*PriceLevel          `protobuf:"bytes,4,rep,name=asks,proto3" json:"asks,omitempty"`
	Timestamp     *Timestamp             `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderBook) Reset() {
	*x = OrderBook{}
	mi := &file_oms_v1_market_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderBook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderBook) ProtoMessage() {}

func (x *OrderBook) ProtoReflect() protoreflect.Message {
	mi := &file_oms_v1_market_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderBook.ProtoReflect.Descriptor instead.
func (*OrderBook) Descriptor() ([]byte, []int) {
	return file_oms_v1_market_data_proto_rawDescGZIP(), []int{0}
}

func (x *OrderBook) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *OrderBook) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *OrderBook) GetBids() []*PriceLevel {
	if x != nil {
		return x.Bids
	}
	return nil
}

func (x *OrderBook) GetAsks() []*PriceLevel {
	if x != nil {
		return x.Asks
	}
	return nil
}

func (x *OrderBook) GetTimestamp() *Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Trade represents a single trade
type Trade struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exchange      string                 `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol        string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Price         *Decimal               `protobuf:"bytes,4,opt,name=price,proto3" json:"price,omitempty"`
	Quantity      *Decimal               `protobuf:"bytes,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Side          OrderSide              `protobuf:"varint,6,opt,name=side,proto3,enum=oms.v1.OrderSide" json:"side,omitempty"`
	Timestamp     *Timestamp             `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	IsBuyerMaker  bool                   `protobuf:"varint,8,opt,name=is_buyer_maker,json=isBuyerMaker,proto3" json:"is_buyer_maker,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Trade) Reset() {
	*x = Trade{}
	mi := &file_oms_v1_market_data_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trade) ProtoMessage() {}

func (x *Trade) ProtoReflect() protoreflect.Message {
	mi := &file_oms_v1_market_data_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trade.ProtoReflect.Descriptor instead.
func (*Trade) Descriptor() ([]byte, []int) {
	return file_oms_v1_market_data_proto_rawDescGZIP(), []int{1}
}

func (x *Trade) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *Trade) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Trade) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Trade) GetPrice() *Decimal {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *Trade) GetQuantity() *Decimal {
	if x != nil {
		return x.Quantity
	}
	return nil
}

func (x *Trade) GetSide() OrderSide {
	if x != nil {
		return x.Side
	}
	return OrderSide_ORDER_SIDE_UNSPECIFIED
}

func (x *Trade) GetTimestamp() *Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Trade) GetIsBuyerMaker() bool {
	if x != nil {
		return x.IsBuyerMaker
	}
	return false
}

// Ticker represents ticker data
type Ticker struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Exchange           string                 `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol             string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	BidPrice           *Decimal               `protobuf:"bytes,3,opt,name=bid_price,json=bidPrice,proto3" json:"bid_price,omitempty"`
	BidQuantity        *Decimal               `protobuf:"bytes,4,opt,name=bid_quantity,json=bidQuantity,proto3" json:"bid_quantity,omitempty"`
	AskPrice           *Decimal               `protobuf:"bytes,5,opt,name=ask_price,json=askPrice,proto3" json:"ask_price,omitempty"`
	AskQuantity        *Decimal               `protobuf:"bytes,6,opt,name=ask_quantity,json=askQuantity,proto3" json:"ask_quantity,omitempty"`
	LastPrice          *Decimal               `protobuf:"bytes,7,opt,name=last_price,json=lastPrice,proto3" json:"last_price,omitempty"`
	Volume_24H         *Decimal               `protobuf:"bytes,8,opt,name=volume_24h,json=volume24h,proto3" json:"volume_24h,omitempty"`
	QuoteVolume_24H    *Decimal               `protobuf:"bytes,9,opt,name=quote_volume_24h,json=quoteVolume24h,proto3" json:"quote_volume_24h,omitempty"`
	OpenPrice          *Decimal               `protobuf:"bytes,10,opt,name=open_price,json=openPrice,proto3" json:"open_price,omitempty"`
	HighPrice          *Decimal               `protobuf:"bytes,11,opt,name=high_price,json=highPrice,proto3" json:"high_price,omitempty"`
	LowPrice           *Decimal               `protobuf:"bytes,12,opt,name=low_price,json=lowPrice,proto3" json:"low_price,omitempty"`
	PrevClosePrice     *Decimal               `protobuf:"bytes,13,opt,name=prev_close_price,json=prevClosePrice,proto3" json:"prev_close_price,omitempty"`
	PriceChange        *Decimal               `protobuf:"bytes,14,opt,name=price_change,json=priceChange,proto3" json:"price_change,omitempty"`
	PriceChangePercent *Decimal               `protobuf:"bytes,15,opt,name=price_change_percent,json=priceChangePercent,proto3" json:"price_change_percent,omitempty"`
	Timestamp          *Timestamp             `protobuf:"bytes,16,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Ticker) Reset() {
	*x = Ticker{}
	mi := &file_oms_v1_market_data_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ticker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticker) ProtoMessage() {}

func (x *Ticker) ProtoReflect() protoreflect.Message {
	mi := &file_oms_v1_market_data_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticker.ProtoReflect.Descriptor instead.
func (*Ticker) Descriptor() ([]byte, []int) {
	return file_oms_v1_market_data_proto_rawDescGZIP(), []int{2}
}

func (x *Ticker) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *Ticker) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Ticker) GetBidPrice() *Decimal {
	if x != nil {
		return x.BidPrice
	}
	return nil
}

func (x *Ticker) GetBidQuantity() *Decimal {
	if x != nil {
		return x.BidQuantity
	}
	return nil
}

func (x *Ticker) GetAskPrice() *Decimal {
	if x != nil {
		return x.AskPrice
	}
	return nil
}

func (x *Ticker) GetAskQuantity() *Decimal {
	if x != nil {
		return x.AskQuantity
	}
	return nil
}

func (x *Ticker) GetLastPrice() *Decimal {
	if x != nil {
		return x.LastPrice
	}
	return nil
}

func (x *Ticker) GetVolume_24H() *Decimal {
	if x != nil {
		return x.Volume_24H
	}
	return nil
}

func (x *Ticker) GetQuoteVolume_24H() *Decimal {
	if x != nil {
		return x.QuoteVolume_24H
	}
	return nil
}

func (x *Ticker) GetOpenPrice() *Decimal {
	if x != nil {
		return x.OpenPrice
	}
	return nil
}

func (x *Ticker) GetHighPrice() *Decimal {
	if x != nil {
		return x.HighPrice
	}
	return nil
}

func (x *Ticker) GetLowPrice() *Decimal {
	if x != nil {
		return x.LowPrice
	}
	return nil
}

func (x *Ticker) GetPrevClosePrice() *Decimal {
	if x != nil {
		return x.PrevClosePrice
	}
	return nil
}

func (x *Ticker) GetPriceChange() *Decimal {
	if x != nil {
		return x.PriceChange
	}
	return nil
}

func (x *Ticker) GetPriceChangePercent() *Decimal {
	if x != nil {
		return x.PriceChangePercent
	}
	return nil
}

func (x *Ticker) GetTimestamp() *Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Kline represents candlestick data
type Kline struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exchange      string                 `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol        string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Interval      string                 `protobuf:"bytes,3,opt,name=interval,proto3" json:"interval,omitempty"` // 1m, 5m, 15m, 1h, 4h, 1d, etc.
	OpenTime      *Timestamp             `protobuf:"bytes,4,opt,name=open_time,json=openTime,proto3" json:"open_time,omitempty"`
	Open          *Decimal               `protobuf:"bytes,5,opt,name=open,proto3" json:"open,omitempty"`
	High          *Decimal               `protobuf:"bytes,6,opt,name=high,proto3" json:"high,omitempty"`
	Low           *Decimal               `protobuf:"bytes,7,opt,name=low,proto3" json:"low,omitempty"`
	Close         *Decimal               `protobuf:"bytes,8,opt,name=close,proto3" json:"close,omitempty"`
	Volume        *Decimal               `protobuf:"bytes,9,opt,name=volume,proto3" json:"volume,omitempty"`
	CloseTime     *Timestamp             `protobuf:"bytes,10,opt,name=close_time,json=closeTime,proto3" json:"close_time,omitempty"`
	QuoteVolume   *Decimal               `protobuf:"bytes,11,opt,name=quote_volume,json=quoteVolume,proto3" json:"quote_volume,omitempty"`
	Trades        int32                  `protobuf:"varint,12,opt,name=trades,proto3" json:"trades,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Kline) Reset() {
	*x = Kline{}
	mi := &file_oms_v1_market_data_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Kline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kline) ProtoMessage() {}

func (x *Kline) ProtoReflect() protoreflect.Message {
	mi := &file_oms_v1_market_data_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kline.ProtoReflect.Descriptor instead.
func (*Kline) Descriptor() ([]byte, []int) {
	return file_oms_v1_market_data_proto_rawDescGZIP(), []int{3}
}

func (x *Kline) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *Kline) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Kline) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *Kline) GetOpenTime() *Timestamp {
	if x != nil {
		return x.OpenTime
	}
	return nil
}

func (x *Kline) GetOpen() *Decimal {
	if x != nil {
		return x.Open
	}
	return nil
}

func (x *Kline) GetHigh() *Decimal {
	if x != nil {
		return x.High
	}
	return nil
}

func (x *Kline) GetLow() *Decimal {
	if x != nil {
		return x.Low
	}
	return nil
}

func (x *Kline) GetClose() *Decimal {
	if x != nil {
		return x.Close
	}
	return nil
}

func (x *Kline) GetVolume() *Decimal {
	if x != nil {
		return x.Volume
	}
	return nil
}

func (x *Kline) GetCloseTime() *Timestamp {
	if x != nil {
		return x.CloseTime
	}
	return nil
}

func (x *Kline) GetQuoteVolume() *Decimal {
	if x != nil {
		return x.QuoteVolume
	}
	return nil
}

func (x *Kline) GetTrades() int32 {
	if x != nil {
		return x.Trades
	}
	return 0
}

// Market data subscription requests
type SubscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exchanges     []string               `protobuf:"bytes,1,rep,name=exchanges,proto3" json:"exchanges,omitempty"`
	Symbols       []string               `protobuf:"bytes,2,rep,name=symbols,proto3" json:"symbols,omitempty"`
	Channels      []string               `protobuf:"bytes,3,rep,name=channels,proto3" json:"channels,omitempty"` // ticker, orderbook, trades, klines
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	mi := &file_oms_v1_market_data_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oms_v1_market_data_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_oms_v1_market_data_proto_rawDescGZIP(), []int{4}
}

func (x *SubscribeRequest) GetExchanges() []string {
	if x != nil {
		return x.Exchanges
	}
	return nil
}

func (x *SubscribeRequest) GetSymbols() []string {
	if x != nil {
		return x.Symbols
	}
	return nil
}

func (x *SubscribeRequest) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

type UnsubscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exchanges     []string               `protobuf:"bytes,1,rep,name=exchanges,proto3" json:"exchanges,omitempty"`
	Symbols       []string               `protobuf:"bytes,2,rep,name=symbols,proto3" json:"symbols,omitempty"`
	Channels      []string               `protobuf:"bytes,3,rep,name=channels,proto3" json:"channels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnsubscribeRequest) Reset() {
	*x = UnsubscribeRequest{}
	mi := &file_oms_v1_market_data_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnsubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeRequest) ProtoMessage() {}

func (x *UnsubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oms_v1_market_data_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeRequest) Descriptor() ([]byte, []int) {
	return file_oms_v1_market_data_proto_rawDescGZIP(), []int{5}
}

func (x *UnsubscribeRequest) GetExchanges() []string {
	if x != nil {
		return x.Exchanges
	}
	return nil
}

func (x *UnsubscribeRequest) GetSymbols() []string {
	if x != nil {
		return x.Symbols
	}
	return nil
}

func (x *UnsubscribeRequest) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

// Market data streaming response
type MarketDataUpdate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*MarketDataUpdate_Orderbook
	//	*MarketDataUpdate_Trade
	//	*MarketDataUpdate_Ticker
	//	*MarketDataUpdate_Kline
	Data          isMarketDataUpdate_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarketDataUpdate) Reset() {
	*x = MarketDataUpdate{}
	mi := &file_oms_v1_market_data_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketDataUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketDataUpdate) ProtoMessage() {}

func (x *MarketDataUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_oms_v1_market_data_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketDataUpdate.ProtoReflect.Descriptor instead.
func (*MarketDataUpdate) Descriptor() ([]byte, []int) {
	return file_oms_v1_market_data_proto_rawDescGZIP(), []int{6}
}

func (x *MarketDataUpdate) GetData() isMarketDataUpdate_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *MarketDataUpdate) GetOrderbook() *OrderBook {
	if x != nil {
		if x, ok := x.Data.(*MarketDataUpdate_Orderbook); ok {
			return x.Orderbook
		}
	}
	return nil
}

func (x *MarketDataUpdate) GetTrade() *Trade {
	if x != nil {
		if x, ok := x.Data.(*MarketDataUpdate_Trade); ok {
			return x.Trade
		}
	}
	return nil
}

func (x *MarketDataUpdate) GetTicker() *Ticker {
	if x != nil {
		if x, ok := x.Data.(*MarketDataUpdate_Ticker); ok {
			return x.Ticker
		}
	}
	return nil
}

func (x *MarketDataUpdate) GetKline() *Kline {
	if x != nil {
		if x, ok := x.Data.(*MarketDataUpdate_Kline); ok {
			return x.Kline
		}
	}
	return nil
}

type isMarketDataUpdate_Data interface {
	isMarketDataUpdate_Data()
}

type MarketDataUpdate_Orderbook struct {
	Orderbook *OrderBook `protobuf:"bytes,1,opt,name=orderbook,proto3,oneof"`
}

type MarketDataUpdate_Trade struct {
	Trade *Trade `protobuf:"bytes,2,opt,name=trade,proto3,oneof"`
}

type MarketDataUpdate_Ticker struct {
	Ticker *Ticker `protobuf:"bytes,3,opt,name=ticker,proto3,oneof"`
}

type MarketDataUpdate_Kline struct {
	Kline *Kline `protobuf:"bytes,4,opt,name=kline,proto3,oneof"`
}

func (*MarketDataUpdate_Orderbook) isMarketDataUpdate_Data() {}

func (*MarketDataUpdate_Trade) isMarketDataUpdate_Data() {}

func (*MarketDataUpdate_Ticker) isMarketDataUpdate_Data() {}

func (*MarketDataUpdate_Kline) isMarketDataUpdate_Data() {}

// Get orderbook request
type GetOrderBookRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exchange      string                 `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol        string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"` // Depth limit
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOrderBookRequest) Reset() {
	*x = GetOrderBookRequest{}
	mi := &file_oms_v1_market_data_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrderBookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderBookRequest) ProtoMessage() {}

func (x *GetOrderBookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oms_v1_market_data_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderBookRequest.ProtoReflect.Descriptor instead.
func (*GetOrderBookRequest) Descriptor() ([]byte, []int) {
	return file_oms_v1_market_data_proto_rawDescGZIP(), []int{7}
}

func (x *GetOrderBookRequest) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *GetOrderBookRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GetOrderBookRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Get ticker request
type GetTickerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exchange      string                 `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol        string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTickerRequest) Reset() {
	*x = GetTickerRequest{}
	mi := &file_oms_v1_market_data_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTickerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTickerRequest) ProtoMessage() {}

func (x *GetTickerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oms_v1_market_data_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTickerRequest.ProtoReflect.Descriptor instead.
func (*GetTickerRequest) Descriptor() ([]byte, []int) {
	return file_oms_v1_market_data_proto_rawDescGZIP(), []int{8}
}

func (x *GetTickerRequest) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *GetTickerRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

// Get recent trades request
type GetRecentTradesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exchange      string                 `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol        string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecentTradesRequest) Reset() {
	*x = GetRecentTradesRequest{}
	mi := &file_oms_v1_market_data_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecentTradesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecentTradesRequest) ProtoMessage() {}

func (x *GetRecentTradesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oms_v1_market_data_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecentTradesRequest.ProtoReflect.Descriptor instead.
func (*GetRecentTradesRequest) Descriptor() ([]byte, []int) {
	return file_oms_v1_market_data_proto_rawDescGZIP(), []int{9}
}

func (x *GetRecentTradesRequest) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *GetRecentTradesRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GetRecentTradesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Get recent trades response
type GetRecentTradesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Trades        []*Trade               `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecentTradesResponse) Reset() {
	*x = GetRecentTradesResponse{}
	mi := &file_oms_v1_market_data_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecentTradesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecentTradesResponse) ProtoMessage() {}

func (x *GetRecentTradesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oms_v1_market_data_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecentTradesResponse.ProtoReflect.Descriptor instead.
func (*GetRecentTradesResponse) Descriptor() ([]byte, []int) {
	return file_oms_v1_market_data_proto_rawDescGZIP(), []int{10}
}

func (x *GetRecentTradesResponse) GetTrades() []*Trade {
	if x != nil {
		return x.Trades
	}
	return nil
}

// Get klines request
type GetKlinesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exchange      string                 `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol        string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Interval      string                 `protobuf:"bytes,3,opt,name=interval,proto3" json:"interval,omitempty"`
	StartTime     *Timestamp             `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *Timestamp             `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Limit         int32                  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetKlinesRequest) Reset() {
	*x = GetKlinesRequest{}
	mi := &file_oms_v1_market_data_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetKlinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKlinesRequest) ProtoMessage() {}

func (x *GetKlinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oms_v1_market_data_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKlinesRequest.ProtoReflect.Descriptor instead.
func (*GetKlinesRequest) Descriptor() ([]byte, []int) {
	return file_oms_v1_market_data_proto_rawDescGZIP(), []int{11}
}

func (x *GetKlinesRequest) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *GetKlinesRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GetKlinesRequest) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *GetKlinesRequest) GetStartTime() *Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetKlinesRequest) GetEndTime() *Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetKlinesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Get klines response
type GetKlinesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Klines        []*Kline               `protobuf:"bytes,1,rep,name=klines,proto3" json:"klines,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetKlinesResponse) Reset() {
	*x = GetKlinesResponse{}
	mi := &file_oms_v1_market_data_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetKlinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKlinesResponse) ProtoMessage() {}

func (x *GetKlinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oms_v1_market_data_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKlinesResponse.ProtoReflect.Descriptor instead.
func (*GetKlinesResponse) Descriptor() ([]byte, []int) {
	return file_oms_v1_market_data_proto_rawDescGZIP(), []int{12}
}

func (x *GetKlinesResponse) GetKlines() []*Kline {
	if x != nil {
		return x.Klines
	}
	return nil
}

var File_oms_v1_market_data_proto protoreflect.FileDescriptor

const file_oms_v1_market_data_proto_rawDesc = "" +
	"\n" +
	"\x18oms/v1/market_data.proto\x12\x06oms.v1\x1a\x13oms/v1/common.proto\"\xc0\x01\n" +
	"\tOrderBook\x12\x1a\n" +
	"\bexchange\x18\x01 \x01(\tR\bexchange\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12&\n" +
	"\x04bids\x18\x03 \x03(\v2\x12.oms.v1.PriceLevelR\x04bids\x12&\n" +
	"\x04asks\x18\x04 \x03(\v2\x12.oms.v1.PriceLevelR\x04asks\x12/\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x11.oms.v1.TimestampR\ttimestamp\"\x9d\x02\n" +
	"\x05Trade\x12\x1a\n" +
	"\bexchange\x18\x01 \x01(\tR\bexchange\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\tR\x02id\x12%\n" +
	"\x05price\x18\x04 \x01(\v2\x0f.oms.v1.DecimalR\x05price\x12+\n" +
	"\bquantity\x18\x05 \x01(\v2\x0f.oms.v1.DecimalR\bquantity\x12%\n" +
	"\x04side\x18\x06 \x01(\x0e2\x11.oms.v1.OrderSideR\x04side\x12/\n" +
	"\ttimestamp\x18\a \x01(\v2\x11.oms.v1.TimestampR\ttimestamp\x12$\n" +
	"\x0eis_buyer_maker\x18\b \x01(\bR\fisBuyerMaker\"\x8c\x06\n" +
	"\x06Ticker\x12\x1a\n" +
	"\bexchange\x18\x01 \x01(\tR\bexchange\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12,\n" +
	"\tbid_price\x18\x03 \x01(\v2\x0f.oms.v1.DecimalR\bbidPrice\x122\n" +
	"\fbid_quantity\x18\x04 \x01(\v2\x0f.oms.v1.DecimalR\vbidQuantity\x12,\n" +
	"\task_price\x18\x05 \x01(\v2\x0f.oms.v1.DecimalR\baskPrice\x122\n" +
	"\fask_quantity\x18\x06 \x01(\v2\x0f.oms.v1.DecimalR\vaskQuantity\x12.\n" +
	"\n" +
	"last_price\x18\a \x01(\v2\x0f.oms.v1.DecimalR\tlastPrice\x12.\n" +
	"\n" +
	"volume_24h\x18\b \x01(\v2\x0f.oms.v1.DecimalR\tvolume24h\x129\n" +
	"\x10quote_volume_24h\x18\t \x01(\v2\x0f.oms.v1.DecimalR\x0equoteVolume24h\x12.\n" +
	"\n" +
	"open_price\x18\n" +
	" \x01(\v2\x0f.oms.v1.DecimalR\topenPrice\x12.\n" +
	"\n" +
	"high_price\x18\v \x01(\v2\x0f.oms.v1.DecimalR\thighPrice\x12,\n" +
	"\tlow_price\x18\f \x01(\v2\x0f.oms.v1.DecimalR\blowPrice\x129\n" +
	"\x10prev_close_price\x18\r \x01(\v2\x0f.oms.v1.DecimalR\x0eprevClosePrice\x122\n" +
	"\fprice_change\x18\x0e \x01(\v2\x0f.oms.v1.DecimalR\vpriceChange\x12A\n" +
	"\x14price_change_percent\x18\x0f \x01(\v2\x0f.oms.v1.DecimalR\x12priceChangePercent\x12/\n" +
	"\ttimestamp\x18\x10 \x01(\v2\x11.oms.v1.TimestampR\ttimestamp\"\xc2\x03\n" +
	"\x05Kline\x12\x1a\n" +
	"\bexchange\x18\x01 \x01(\tR\bexchange\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12\x1a\n" +
	"\binterval\x18\x03 \x01(\tR\binterval\x12.\n" +
	"\topen_time\x18\x04 \x01(\v2\x11.oms.v1.TimestampR\bopenTime\x12#\n" +
	"\x04open\x18\x05 \x01(\v2\x0f.oms.v1.DecimalR\x04open\x12#\n" +
	"\x04high\x18\x06 \x01(\v2\x0f.oms.v1.DecimalR\x04high\x12!\n" +
	"\x03low\x18\a \x01(\v2\x0f.oms.v1.DecimalR\x03low\x12%\n" +
	"\x05close\x18\b \x01(\v2\x0f.oms.v1.DecimalR\x05close\x12'\n" +
	"\x06volume\x18\t \x01(\v2\x0f.oms.v1.DecimalR\x06volume\x120\n" +
	"\n" +
	"close_time\x18\n" +
	" \x01(\v2\x11.oms.v1.TimestampR\tcloseTime\x122\n" +
	"\fquote_volume\x18\v \x01(\v2\x0f.oms.v1.DecimalR\vquoteVolume\x12\x16\n" +
	"\x06trades\x18\f \x01(\x05R\x06trades\"f\n" +
	"\x10SubscribeRequest\x12\x1c\n" +
	"\texchanges\x18\x01 \x03(\tR\texchanges\x12\x18\n" +
	"\asymbols\x18\x02 \x03(\tR\asymbols\x12\x1a\n" +
	"\bchannels\x18\x03 \x03(\tR\bchannels\"h\n" +
	"\x12UnsubscribeRequest\x12\x1c\n" +
	"\texchanges\x18\x01 \x03(\tR\texchanges\x12\x18\n" +
	"\asymbols\x18\x02 \x03(\tR\asymbols\x12\x1a\n" +
	"\bchannels\x18\x03 \x03(\tR\bchannels\"\xc5\x01\n" +
	"\x10MarketDataUpdate\x121\n" +
	"\torderbook\x18\x01 \x01(\v2\x11.oms.v1.OrderBookH\x00R\torderbook\x12%\n" +
	"\x05trade\x18\x02 \x01(\v2\r.oms.v1.TradeH\x00R\x05trade\x12(\n" +
	"\x06ticker\x18\x03 \x01(\v2\x0e.oms.v1.TickerH\x00R\x06ticker\x12%\n" +
	"\x05kline\x18\x04 \x01(\v2\r.oms.v1.KlineH\x00R\x05klineB\x06\n" +
	"\x04data\"_\n" +
	"\x13GetOrderBookRequest\x12\x1a\n" +
	"\bexchange\x18\x01 \x01(\tR\bexchange\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\"F\n" +
	"\x10GetTickerRequest\x12\x1a\n" +
	"\bexchange\x18\x01 \x01(\tR\bexchange\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\"b\n" +
	"\x16GetRecentTradesRequest\x12\x1a\n" +
	"\bexchange\x18\x01 \x01(\tR\bexchange\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\"@\n" +
	"\x17GetRecentTradesResponse\x12%\n" +
	"\x06trades\x18\x01 \x03(\v2\r.oms.v1.TradeR\x06trades\"\xd8\x01\n" +
	"\x10GetKlinesRequest\x12\x1a\n" +
	"\bexchange\x18\x01 \x01(\tR\bexchange\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12\x1a\n" +
	"\binterval\x18\x03 \x01(\tR\binterval\x120\n" +
	"\n" +
	"start_time\x18\x04 \x01(\v2\x11.oms.v1.TimestampR\tstartTime\x12,\n" +
	"\bend_time\x18\x05 \x01(\v2\x11.oms.v1.TimestampR\aendTime\x12\x14\n" +
	"\x05limit\x18\x06 \x01(\x05R\x05limit\":\n" +
	"\x11GetKlinesResponse\x12%\n" +
	"\x06klines\x18\x01 \x03(\v2\r.oms.v1.KlineR\x06klinesB.Z,github.com/mExOms/oms/pkg/proto/oms/v1;omsv1b\x06proto3"

var (
	file_oms_v1_market_data_proto_rawDescOnce sync.Once
	file_oms_v1_market_data_proto_rawDescData []byte
)

func file_oms_v1_market_data_proto_rawDescGZIP() []byte {
	file_oms_v1_market_data_proto_rawDescOnce.Do(func() {
		file_oms_v1_market_data_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_oms_v1_market_data_proto_rawDesc), len(file_oms_v1_market_data_proto_rawDesc)))
	})
	return file_oms_v1_market_data_proto_rawDescData
}

var file_oms_v1_market_data_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_oms_v1_market_data_proto_goTypes = []any{
	(*OrderBook)(nil),               // 0: oms.v1.OrderBook
	(*Trade)(nil),                   // 1: oms.v1.Trade
	(*Ticker)(nil),                  // 2: oms.v1.Ticker
	(*Kline)(nil),                   // 3: oms.v1.Kline
	(*SubscribeRequest)(nil),        // 4: oms.v1.SubscribeRequest
	(*UnsubscribeRequest)(nil),      // 5: oms.v1.UnsubscribeRequest
	(*MarketDataUpdate)(nil),        // 6: oms.v1.MarketDataUpdate
	(*GetOrderBookRequest)(nil),     // 7: oms.v1.GetOrderBookRequest
	(*GetTickerRequest)(nil),        // 8: oms.v1.GetTickerRequest
	(*GetRecentTradesRequest)(nil),  // 9: oms.v1.GetRecentTradesRequest
	(*GetRecentTradesResponse)(nil), // 10: oms.v1.GetRecentTradesResponse
	(*GetKlinesRequest)(nil),        // 11: oms.v1.GetKlinesRequest
	(*GetKlinesResponse)(nil),       // 12: oms.v1.GetKlinesResponse
	(*PriceLevel)(nil),              // 13: oms.v1.PriceLevel
	(*Timestamp)(nil),               // 14: oms.v1.Timestamp
	(*Decimal)(nil),                 // 15: oms.v1.Decimal
	(OrderSide)(0),                  // 16: oms.v1.OrderSide
}
var file_oms_v1_market_data_proto_depIdxs = []int32{
	13, // 0: oms.v1.OrderBook.bids:type_name -> oms.v1.PriceLevel
	13, // 1: oms.v1.OrderBook.asks:type_name -> oms.v1.PriceLevel
	14, // 2: oms.v1.OrderBook.timestamp:type_name -> oms.v1.Timestamp
	15, // 3: oms.v1.Trade.price:type_name -> oms.v1.Decimal
	15, // 4: oms.v1.Trade.quantity:type_name -> oms.v1.Decimal
	16, // 5: oms.v1.Trade.side:type_name -> oms.v1.OrderSide
	14, // 6: oms.v1.Trade.timestamp:type_name -> oms.v1.Timestamp
	15, // 7: oms.v1.Ticker.bid_price:type_name -> oms.v1.Decimal
	15, // 8: oms.v1.Ticker.bid_quantity:type_name -> oms.v1.Decimal
	15, // 9: oms.v1.Ticker.ask_price:type_name -> oms.v1.Decimal
	15, // 10: oms.v1.Ticker.ask_quantity:type_name -> oms.v1.Decimal
	15, // 11: oms.v1.Ticker.last_price:type_name -> oms.v1.Decimal
	15, // 12: oms.v1.Ticker.volume_24h:type_name -> oms.v1.Decimal
	15, // 13: oms.v1.Ticker.quote_volume_24h:type_name -> oms.v1.Decimal
	15, // 14: oms.v1.Ticker.open_price:type_name -> oms.v1.Decimal
	15, // 15: oms.v1.Ticker.high_price:type_name -> oms.v1.Decimal
	15, // 16: oms.v1.Ticker.low_price:type_name -> oms.v1.Decimal
	15, // 17: oms.v1.Ticker.prev_close_price:type_name -> oms.v1.Decimal
	15, // 18: oms.v1.Ticker.price_change:type_name -> oms.v1.Decimal
	15, // 19: oms.v1.Ticker.price_change_percent:type_name -> oms.v1.Decimal
	14, // 20: oms.v1.Ticker.timestamp:type_name -> oms.v1.Timestamp
	14, // 21: oms.v1.Kline.open_time:type_name -> oms.v1.Timestamp
	15, // 22: oms.v1.Kline.open:type_name -> oms.v1.Decimal
	15, // 23: oms.v1.Kline.high:type_name -> oms.v1.Decimal
	15, // 24: oms.v1.Kline.low:type_name -> oms.v1.Decimal
	15, // 25: oms.v1.Kline.close:type_name -> oms.v1.Decimal
	15, // 26: oms.v1.Kline.volume:type_name -> oms.v1.Decimal
	14, // 27: oms.v1.Kline.close_time:type_name -> oms.v1.Timestamp
	15, // 28: oms.v1.Kline.quote_volume:type_name -> oms.v1.Decimal
	0,  // 29: oms.v1.MarketDataUpdate.orderbook:type_name -> oms.v1.OrderBook
	1,  // 30: oms.v1.MarketDataUpdate.trade:type_name -> oms.v1.Trade
	2,  // 31: oms.v1.MarketDataUpdate.ticker:type_name -> oms.v1.Ticker
	3,  // 32: oms.v1.MarketDataUpdate.kline:type_name -> oms.v1.Kline
	1,  // 33: oms.v1.GetRecentTradesResponse.trades:type_name -> oms.v1.Trade
	14, // 34: oms.v1.GetKlinesRequest.start_time:type_name -> oms.v1.Timestamp
	14, // 35: oms.v1.GetKlinesRequest.end_time:type_name -> oms.v1.Timestamp
	3,  // 36: oms.v1.GetKlinesResponse.klines:type_name -> oms.v1.Kline
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_oms_v1_market_data_proto_init() }
func file_oms_v1_market_data_proto_init() {
	if File_oms_v1_market_data_proto != nil {
		return
	}
	file_oms_v1_common_proto_init()
	file_oms_v1_market_data_proto_msgTypes[6].OneofWrappers = []any{
		(*MarketDataUpdate_Orderbook)(nil),
		(*MarketDataUpdate_Trade)(nil),
		(*MarketDataUpdate_Ticker)(nil),
		(*MarketDataUpdate_Kline)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_oms_v1_market_data_proto_rawDesc), len(file_oms_v1_market_data_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_oms_v1_market_data_proto_goTypes,
		DependencyIndexes: file_oms_v1_market_data_proto_depIdxs,
		MessageInfos:      file_oms_v1_market_data_proto_msgTypes,
	}.Build()
	File_oms_v1_market_data_proto = out.File
	file_oms_v1_market_data_proto_goTypes = nil
	file_oms_v1_market_data_proto_depIdxs = nil
}
