syntax = "proto3";

package oms.v1;

option go_package = "github.com/mExOms/oms/pkg/proto/oms/v1;omsv1";

import "oms/v1/common.proto";

// Order represents a trading order
message Order {
    string id = 1;
    string client_order_id = 2;
    string exchange = 3;
    string symbol = 4;
    OrderSide side = 5;
    OrderType type = 6;
    Decimal price = 7;
    Decimal quantity = 8;
    Decimal executed_quantity = 9;
    OrderStatus status = 10;
    TimeInForce time_in_force = 11;
    Market market = 12;
    Timestamp created_at = 13;
    Timestamp updated_at = 14;
    
    // Additional fields for advanced orders
    Decimal stop_price = 15;
    bool reduce_only = 16;
    bool post_only = 17;
    string position_side = 18;  // For futures: LONG, SHORT, BOTH
}

// OrderRequest for creating new orders
message OrderRequest {
    string exchange = 1;
    string symbol = 2;
    OrderSide side = 3;
    OrderType type = 4;
    Decimal price = 5;
    Decimal quantity = 6;
    TimeInForce time_in_force = 7;
    Market market = 8;
    
    // Optional fields
    string client_order_id = 9;
    Decimal stop_price = 10;
    bool reduce_only = 11;
    bool post_only = 12;
    string position_side = 13;
}

// OrderResponse for order operations
message OrderResponse {
    Order order = 1;
    string message = 2;
}

// CancelOrderRequest for canceling orders
message CancelOrderRequest {
    string exchange = 1;
    string symbol = 2;
    string order_id = 3;
    string client_order_id = 4;  // Alternative to order_id
}

// GetOrderRequest for retrieving order details
message GetOrderRequest {
    string exchange = 1;
    string symbol = 2;
    string order_id = 3;
    string client_order_id = 4;  // Alternative to order_id
}

// ListOrdersRequest for listing multiple orders
message ListOrdersRequest {
    string exchange = 1;
    string symbol = 2;
    OrderStatus status = 3;
    Market market = 4;
    int32 limit = 5;
    Timestamp start_time = 6;
    Timestamp end_time = 7;
}

// ListOrdersResponse contains multiple orders
message ListOrdersResponse {
    repeated Order orders = 1;
    int32 total = 2;
}